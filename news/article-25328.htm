<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://macclash.github.io/news/article-25328.htm" />
    <title>记一次dotnet拆分包,并希望得大佬指点</title>
        <meta name="description" content="之前做了一个用于excel导入导出的包, 定义了一些接口, 然后基于 NPOI EPPlus MiniExcel 做了三种实现 接口大概长下面这样(现在可以在接口里面写静态函数了!) public i" />
        <link rel="icon" href="/assets/website/img/macclash/favicon.ico" type="image/x-icon"/>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="/assets/website/css/macclash/style.css">
    <link rel="stylesheet" href="/assets/website/css/macclash/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/macclash/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/macclash/jquery-ui.css">
    <link rel="stylesheet" href="/assets/website/css/macclash/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/macclash/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/macclash/bootstrap-datepicker.css">
    <link rel="stylesheet" href="/assets/website/css/macclash/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/macclash/aos.css">
    <link rel="stylesheet" href="/assets/website/css/macclash/style1.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-BKMT4JJEWP"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-BKMT4JJEWP');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        
    <div class="site-mobile-menu site-navbar-target">
        <div class="site-mobile-menu-header">
            <div class="site-mobile-menu-close mt-3">
                <span class="icon-close2 js-menu-toggle"></span>
            </div>
        </div>
        <div class="site-mobile-menu-body"></div>
    </div>
    <header class="site-navbar py-3 js-site-navbar site-navbar-target" role="banner" id="site-navbar">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-4 site-logo">
                    <a href="/" class="text-white h2 mb-0">
                                        <span class="mb-0">Mac Clash</span>
                                        </a>
                </div>
                <div class="col-md-8 d-none d-xl-block">
                    <nav class="site-navigation position-relative text-right" role="navigation">
                        <ul class="site-menu js-clone-nav mx-auto d-none d-lg-block">
                                                        <li><a href="/" class="nav-link">首页</a></li>
                                                        <li><a href="/free-nodes/" class="nav-link">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/" class="nav-link">推荐机场</a></li>
                                                        <li><a href="/news/" class="nav-link">新闻资讯</a></li>
                                                        <li><a href="#" class="nav-link">关于</a></li>
                            <li><a href="#" class="nav-link">联系</a></li>
                        </ul>
                    </nav>
                </div>
                <div class="d-inline-block d-xl-none ml-md-0 mr-auto py-3" style="position: relative; top: 3px;"><a href="#" class="site-menu-toggle js-menu-toggle"><span class="icon-menu h3"></span></a></div>
            </div>
        </div>
    </header>
    <div class="site-blocks-cover overlay" style="background-image: url(/assets/website/img/macclash/hero_bg_2.jpg);" data-aos="fade" data-stellar-background-ratio="0.5" id="section-home">
        <div class="container">
            <div class="row align-items-center justify-content-center text-center">
                <div class="col-md-8" data-aos="fade-up" data-aos-delay="400">
                    <h1 class="text-white font-weight-light text-uppercase font-weight-bold">
                        记一次dotnet拆分包,并希望得大佬指点                    </h1>
                    <p class="mb-5">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="site-section" id="section-about">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				</h1> <p>之前做了一个用于excel导入导出的包, 定义了一些接口, 然后基于 NPOI EPPlus MiniExcel 做了三种实现</p> <p>接口大概长下面这样(现在可以在接口里面写静态函数了!)</p> <pre><code class="language-csharp">public interface IExcelReader {     // 根据一些条件返回下面的实现     public static IExcelReader GetExcelReader(string filePath, &lt;params&gt;)     {     } }</code></pre> <p>然后有对应三种实现</p> <pre><code class="language-csharp">public class NPOIReader: IExcelReader {}  public class EPPlusReader: IExcelReader {}  public class MiniExcel: IExcelReader {}</code></pre> <p>在使用时</p> <pre><code class="language-csharp">using var reader = IExcelReader.GetExcelReader("ExcelReader.xlsx", &lt;一堆杂七杂八的条件&gt;)</code></pre> <p>根据需要获取实例, 而<strong>不必去管</strong>什么 NPOI EPPlus MiniExcel</p> <p>用起来可以极大的降低心智负担, 也可以使用我认为比较 "人性化" 的操作</p> <p>这一堆东西都是写在一起的, 然后碰到了一些我比较在意的问题</p> <ol> <li>如果我只是更新了NPOI包的实现, 然后push了一个新的版本, 这就相当于其他的实现也被"升级"了, 尽管另外的实现没有任何变化, 我认为这样是不好的</li> <li>如果我只想使用 MiniExcel 的内容, 但由于三个实现写在了一起, NPOI 和 EPPlus 会被一起引入, 我认为这样是不好的</li> <li>如果我修改了接口<code>IExcelReader</code>, 那我必定需要同时修改对应的三个实现, 但是由于三个实现写在一起, 我必须将三个实现都改完测完, 然后才能push发包, 我认为这样是不好的</li> </ol> <p>因为这样那样的问题, 我开始考虑拆包了</p> <h2 id="初步构想">初步构想</h2> <p>一开始的想法是</p> <p>先把统一的接口和操作什么的东西抽出来, 做成一个Core包</p> <p>然后 NPOI EPPlus MiniExcel 相关的实现做成三个包, 都引用这个 Core</p> <p>如果代码中只用<code>IExcelReader</code> 这样的接口进行操作, 可以在不改变代码的前提下, 通过更换包引用(比如NPOI的包改为MiniExcel的包)轻松改变实现, 达成不同的效果</p> <p>但由于<strong>Core包是被引用的</strong>, 所以理论上来说<code>IExcelReader</code> 并不能像之前那样直接创建这三种实例</p> <p>碰到这种"我知道, 但是身不由己"的情况, 我想到了用委托来做</p> <pre><code class="language-csharp">// (大概是这么个感觉, 实际上我现在用的是字典) public static List&lt;Func&lt;string, IExcelReader&gt;&gt; Selector;</code></pre> <p>在Core中搞一个静态委托集合, 然后在那三个包中将创建对象的委托加到这个集合里, 之后在使用<code>IExcelReader.GetExcelReader("**.xlsx")</code> 时, 就可以通过这个委托集合获取到对应的实现了</p> <p>以上是我的大致思路</p> <h2 id="第一种尝试-静态构造函数">第一种尝试-静态构造函数</h2> <p>我最先想到的就是<strong>静态构造函数</strong></p> <p>毕竟<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/static-constructors"  target="_blank" rel="nofollow">微软的文档</a>上说了</p> <blockquote> <p>静态构造函数用于初始化任何静态数据，或执行仅需执行一次的特定操作。 将在创建第一个实例或引用任何静态成员之前自动调用静态构造函数。</p> </blockquote> <p>看描述还挺符合我的想法, 然后就有了如下代码</p> <pre><code class="language-csharp">public class NPOIExcelReader : IExcelReader {     static NPOIExcelReader()     {         Selector.Add((path) =&gt;         {             // 假装下面做了一堆事情             // ......             return new NPOIExcelReader(path);         });     } }</code></pre> <p>看着好像还行, 试了一下结果GG</p> <p>如果我只是使用<code>IExcelReader.GetExcelReader("**.xlsx")</code>, 则无法触发这个构造函数, 除非我在这之前调用一次<code>NPOIExcelReader</code>, 但这与我的设想差挺多的, 所以暂时放弃了这个方案, 另寻他法</p> <h2 id="第二种尝试-moduleinitializer">第二种尝试-ModuleInitializer</h2> <p>我觉得可能是因为<code>class</code> 太 "低" 了, 所以才无法触发静态构造函数</p> <p>然后我又想到了<code>ModuleInitializer</code>, 感觉这个总比<code>class</code> "高"一些, 不知道能不能实现我的想法</p> <pre><code class="language-csharp">internal class Init {     [ModuleInitializer]     public static void InitSelector()     {         Selector.Add((path) =&gt;         {             // 假装下面做了一堆事情             // ......             return new NPOIExcelReader(path);         });     } }</code></pre> <p>在NPOI包里写完上面的初始化之后我又尝试了一次, 结果还是GG......</p> <p>碰到了类似的问题, 如果不调用NPOI包内的东西, 则无法初始化</p> <h2 id="第三种尝试-appdomaincurrentdomainload">第三种尝试-AppDomain.CurrentDomain.Load</h2> <p>后来查看了<code>AppDomain.CurrentDomain.GetAssemblies()</code>, 发现程序运行时并没有加载 NPOI包 的程序集, 我觉得可能是因为这个原因才导致扑街的</p> <p>所以尝试在Core中用反射获取程序集(因为在代码中使用了<code>IExcelReader.GetExcelReader</code>, 所以可以触发Core包的<code>ModuleInitializer</code>初始化), 然后使用<code>AppDomain.CurrentDomain.load</code> 来加载</p> <pre><code class="language-csharp">public static class Init {     [ModuleInitializer]     public static void InitCellReader()     {         var files = Directory.GetFiles(AppDomain.CurrentDomain.BaseDirectory, "我那几个包的实现.dll");         if (files.IsEmpty())             return;         var newAsses = files.Select(item =&gt; Assembly.LoadFrom(item)).ToList();         newAsses.ForEach(item =&gt; AppDomain.CurrentDomain.Load(item.FullName));     } }</code></pre> <p>运行之后打个断点, 确实执行了, 也确实加载到<code>AppDomain.CurrentDomain</code> 中了, 但是...还是没用, 全都木大木大了</p> <h2 id="绝望的尝试-反射activator">绝望的尝试-反射+Activator</h2> <p>既然发现问题出在 "不调用就不初始化" 上, 那我就调用一下...</p> <p>基于上面的第三种尝试, 尝试创建NPOI包中的实现, 能不能创建无所谓, 重要的是摆出一副 "我要调你" 的感觉, 然后初始化自己动起来</p> <p>还是写在Core包中</p> <pre><code class="language-csharp"> public static class Init {     [ModuleInitializer]     public static void InitCellReader()     {         var files = Directory.GetFiles(AppDomain.CurrentDomain.BaseDirectory, "我那几个包的实现.dll");         if (files.IsEmpty())             return;         var newAsses = files.Select(item =&gt; Assembly.LoadFrom(item)).ToList();         newAsses.ForEach(item =&gt; AppDomain.CurrentDomain.Load(item.FullName));         var types = newAsses.SelectMany(s =&gt; s.GetTypes().Where(item =&gt; item.HasInterface(typeof(IExcelReader))));         types.ForEach(item =&gt;         {             try             {                 Activator.CreateInstance(item);             }             catch { }         });     } }</code></pre> <p>然后配合其他包的<code>Init</code>, 最后终于算是实现了我想要的效果</p> <p>但是实现的方式太丑陋了...不知道有没有更好, 更优雅的方式可以在运行或者编译的时候完成这个<strong>初始化操作</strong></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-24866.htm">动物疫苗一般什么时候是旺季呢 动物疫苗一般什么时候是旺季呢图片</a></p>
                                        <p>下一个：<a href="/news/article-25329.htm">三国杀武将登场特效必须是动态皮肤吗为什么（三国杀出场特效）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-29517.htm" title="58同城宠物网（专门卖宠物的app）">58同城宠物网（专门卖宠物的app）</a></li>
                        <li class="py-2"><a href="/news/article-30954.htm" title="疫苗的分类不包括灭活疫苗减毒活疫苗动物疫苗重组疫苗（疫苗种类不包括）">疫苗的分类不包括灭活疫苗减毒活疫苗动物疫苗重组疫苗（疫苗种类不包括）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-7-free-node-subscribe-links.htm" title="12月7日→18.9M/S|2024年最新免费节点Mac Clash订阅链接地址">12月7日→18.9M/S|2024年最新免费节点Mac Clash订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-26-node-share.htm" title="11月26日→22.7M/S|2024年最新免费节点Mac Clash订阅链接地址">11月26日→22.7M/S|2024年最新免费节点Mac Clash订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-10-node-share.htm" title="12月10日→21.6M/S|2024年最新免费节点Mac Clash订阅链接地址">12月10日→21.6M/S|2024年最新免费节点Mac Clash订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-17-clash-node.htm" title="10月17日→19M/S|2024年最新免费节点Mac Clash订阅链接地址">10月17日→19M/S|2024年最新免费节点Mac Clash订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-18-node-share-links.htm" title="11月18日→21.1M/S|2024年最新免费节点Mac Clash订阅链接地址">11月18日→21.1M/S|2024年最新免费节点Mac Clash订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-18888.htm" title="一步一步生成滑动验证码图片详解">一步一步生成滑动验证码图片详解</a></li>
                        <li class="py-2"><a href="/news/article-21734.htm" title="pyenv与pyenv-virtualenv的安装和使用（Mac）">pyenv与pyenv-virtualenv的安装和使用（Mac）</a></li>
                        <li class="py-2"><a href="/news/article-21735.htm" title="springboot关于mysql数据库date时间的坑">springboot关于mysql数据库date时间的坑</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">5</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
        <footer class="site-footer">
        <div class="container">
            <div class="row text-center">
                <div class="col-md-12">
                    <div class="pt-5">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>
                            <a href="/">Mac Clash免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- </div> -->
    <script src="/assets/website/js/frontend/macclash/jquery-3.3.1.min.js"></script>
    <script src="/assets/website/js/frontend/macclash/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/website/js/frontend/macclash/jquery-ui.js"></script>
    <script src="/assets/website/js/frontend/macclash/jquery.easing.1.3.js"></script>
    <script src="/assets/website/js/frontend/macclash/popper.min.js"></script>
    <script src="/assets/website/js/frontend/macclash/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/macclash/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/macclash/jquery.stellar.min.js"></script>
    <script src="/assets/website/js/frontend/macclash/jquery.countdown.min.js"></script>
    <script src="/assets/website/js/frontend/macclash/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/macclash/bootstrap-datepicker.min.js"></script>
    <script src="/assets/website/js/frontend/macclash/aos.js"></script>
    <script src="/assets/website/js/frontend/macclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>